/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    categories: Category;
    media: Media;
    pages: Page;
    posts: Post;
    projects: Project;
    services: Service;
    users: User;
    forms: Form;
    'form-submissions': FormSubmission;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
}
export interface Category {
  id: string;
  title?: string | null;
  parent?: (string | null) | Category;
  breadcrumbs?:
    | {
        doc?: (string | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
}
export interface Page {
  id: string;
  title: string;
  publishedAt?: string | null;
  hero: {
    hero: {
      type: 'none' | 'landingPageHeader' | 'subPageHeader';
      title: string;
    };
  };
  layout: (
    | {
        populateBy?: ('collection' | 'selection') | null;
        relationTo?: 'posts' | null;
        categories?: (string | Category)[] | null;
        limit?: number | null;
        selectedDocs?: (string | null) | Project;
        populatedDocs?: (string | null) | Project;
        populatedDocsTotal?: number | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'blogArchive';
      }
    | {
        populateBy?: ('collection' | 'selection') | null;
        relationTo?: 'projects' | null;
        services?: (string | Service)[] | null;
        limit?: number | null;
        selectedDocs?: (string | null) | Post;
        populatedDocs?: (string | null) | Post;
        populatedDocsTotal?: number | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'projectsArchive';
      }
    | {
        title?: string | null;
        projects?: (string | Project)[] | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'selectedProjects';
      }
    | {
        intro?: {
          title?: string | null;
          description?: string | null;
        };
        form: string | Form;
        id?: string | null;
        blockName?: string | null;
        blockType: 'formBlock';
      }
    | {
        title?: string | null;
        layout: (
          | {
              populateBy?: ('collection' | 'selection') | null;
              relationTo?: 'posts' | null;
              categories?: (string | Category)[] | null;
              limit?: number | null;
              selectedDocs?: (string | null) | Project;
              populatedDocs?: (string | null) | Project;
              populatedDocsTotal?: number | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'blogArchive';
            }
          | {
              populateBy?: ('collection' | 'selection') | null;
              relationTo?: 'projects' | null;
              services?: (string | Service)[] | null;
              limit?: number | null;
              selectedDocs?: (string | null) | Post;
              populatedDocs?: (string | null) | Post;
              populatedDocsTotal?: number | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'projectsArchive';
            }
          | {
              title?: string | null;
              projects?: (string | Project)[] | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'selectedProjects';
            }
          | {
              intro?: {
                title?: string | null;
                description?: string | null;
              };
              form: string | Form;
              id?: string | null;
              blockName?: string | null;
              blockType: 'formBlock';
            }
        )[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'group';
      }
  )[];
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: string | Media | null;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
export interface Project {
  id: string;
  title: string;
  image: string | Media;
  services?: (string | Service)[] | null;
  publishedAt?: string | null;
  hero: {
    hero: {
      type: 'none' | 'landingPageHeader' | 'subPageHeader';
      title: string;
    };
  };
  content: {
    layout: (
      | {
          populateBy?: ('collection' | 'selection') | null;
          relationTo?: 'posts' | null;
          categories?: (string | Category)[] | null;
          limit?: number | null;
          selectedDocs?: (string | null) | Project;
          populatedDocs?: (string | null) | Project;
          populatedDocsTotal?: number | null;
          id?: string | null;
          blockName?: string | null;
          blockType: 'blogArchive';
        }
      | {
          intro?: {
            title?: string | null;
            description?: string | null;
          };
          form: string | Form;
          id?: string | null;
          blockName?: string | null;
          blockType: 'formBlock';
        }
      | {
          populateBy?: ('collection' | 'selection') | null;
          relationTo?: 'projects' | null;
          services?: (string | Service)[] | null;
          limit?: number | null;
          selectedDocs?: (string | null) | Post;
          populatedDocs?: (string | null) | Post;
          populatedDocsTotal?: number | null;
          id?: string | null;
          blockName?: string | null;
          blockType: 'projectsArchive';
        }
      | {
          title?: string | null;
          projects?: (string | Project)[] | null;
          id?: string | null;
          blockName?: string | null;
          blockType: 'selectedProjects';
        }
      | {
          title?: string | null;
          layout: (
            | {
                populateBy?: ('collection' | 'selection') | null;
                relationTo?: 'posts' | null;
                categories?: (string | Category)[] | null;
                limit?: number | null;
                selectedDocs?: (string | null) | Project;
                populatedDocs?: (string | null) | Project;
                populatedDocsTotal?: number | null;
                id?: string | null;
                blockName?: string | null;
                blockType: 'blogArchive';
              }
            | {
                populateBy?: ('collection' | 'selection') | null;
                relationTo?: 'projects' | null;
                services?: (string | Service)[] | null;
                limit?: number | null;
                selectedDocs?: (string | null) | Post;
                populatedDocs?: (string | null) | Post;
                populatedDocsTotal?: number | null;
                id?: string | null;
                blockName?: string | null;
                blockType: 'projectsArchive';
              }
            | {
                title?: string | null;
                projects?: (string | Project)[] | null;
                id?: string | null;
                blockName?: string | null;
                blockType: 'selectedProjects';
              }
            | {
                intro?: {
                  title?: string | null;
                  description?: string | null;
                };
                form: string | Form;
                id?: string | null;
                blockName?: string | null;
                blockType: 'formBlock';
              }
          )[];
          id?: string | null;
          blockName?: string | null;
          blockType: 'group';
        }
    )[];
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: string | Media | null;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
export interface Service {
  id: string;
  title?: string | null;
  description?: string | null;
  parent?: (string | null) | Service;
  breadcrumbs?:
    | {
        doc?: (string | null) | Service;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface Form {
  id: string;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label: string;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label: string;
            placeholder?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?:
              | {
                  [k: string]: unknown;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label: string;
            placeholder?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label: string;
            placeholder?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  redirect?: {
    url: string;
  };
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        message?:
          | {
              [k: string]: unknown;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface Post {
  id: string;
  title: string;
  image: string | Media;
  categories?: (string | Category)[] | null;
  content: {
    [k: string]: unknown;
  }[];
  publishedAt?: string | null;
  authors?: (string | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  relatedPosts?: (string | Post)[] | null;
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: string | Media | null;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
export interface User {
  id: string;
  name?: string | null;
  roles?: ('admin' | 'user')[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
export interface FormSubmission {
  id: string;
  form: string | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
